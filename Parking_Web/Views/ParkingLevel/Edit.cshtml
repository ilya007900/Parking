@model Parking_Web.ViewModels.ParkingLevel.ParkingLevelEditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Parking Level Edit</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" value="@Model.Id" />
            <div class="form-group">
                <label asp-for="Floor" class="control-label"></label>
                <input asp-for="Floor" class="form-control" />
                <span asp-validation-for="Floor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<a asp-action="AddParkingSpace" asp-route-parkingLevelId="@Model.Id">Add parking space</a>
<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Number</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var parkingSpace in @Model.ParkingSpaces)
    {
        <tr>
            <td>@parkingSpace.Id</td>
            <td>@parkingSpace.Number</td>
            <td>
                <a asp-action="DeleteParkingSpace" 
                   asp-route-parkingLevelId="@Model.Id"
                   asp-route-parkingSpaceId="@parkingSpace.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<a asp-controller="Parking" asp-action="Edit" asp-route-id="@ViewBag.ParkingId">Back</a>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
